Vagrant.configure(2) do |config|
    config.vagrant.plugins = ["vagrant-reload"]

    config.vm.synced_folder ".", "/vagrant", :disabled => true

    config.vm.define :etcd do |etcd|
      etcd.vm.host_name = "etcd"
      etcd.vm.box = "generic/ubuntu1804"

      etcd.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
      end

    end

    config.vm.define :controlplane do |controlplane|
      controlplane.vm.host_name = "controlplane"
      controlplane.vm.box = "generic/ubuntu1804"

      controlplane.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
      end

    end

    config.vm.define :worker do |worker|
      worker.vm.host_name = "worker"
      worker.vm.box = "generic/ubuntu1804"

      worker.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
      end

    end

    config.vm.define :winworker do |winworker|
      winworker.vm.host_name = "winworker"
      winworker.vm.box = "jborean93/WindowsServer2019"

      winworker.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
        vb.gui = true
      end

    end

    config.vm.define :winworker22 do |winworker22|
      winworker22.vm.host_name = "winworker22"
      winworker22.vm.box = "jborean93/WindowsServer2022"

      winworker22.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
        vb.gui = true
      end

    end

    config.vm.define :rancher do |rancher|
      rancher.vm.host_name = "rancher"
      rancher.vm.box = "generic/ubuntu1804"

      rancher.vm.provider :virtualbox do |vb|
        vb.memory = 4096
        vb.cpus = 2
        vb.gui = true
      end

      rancher.vm.provision :shell, privileged: true, inline: "apt-get update && apt-get install build-essential -y"
      rancher.vm.provision :shell, privileged: true, inline: "snap install docker"
      rancher.vm.provision :shell, privileged: true, inline: "snap install kubectl --classic"
      rancher.vm.provision :shell, privileged: true, inline: "docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher:v2.6-head"

    end

  end
